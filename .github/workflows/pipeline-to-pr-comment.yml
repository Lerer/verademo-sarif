# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Pipeline scan to PR Comment

on:
  [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Download the Pipeline Scanner
      uses: wei/curl@master
      with:
        args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - name: Unzip the Pipeline Scanner
      run: unzip pipeline-scan-LATEST.zip
    - name: Run Pipeline Scanner
      id: pipeline-scan
      continue-on-error: true
      run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" -so true --file "./target/verademo.war" --fail_on_severity="Very High, High"
    - id: get-comment-body
      if: ${{ github.head_ref != '' }}
      run: |
        body=$(cat results.txt)
        body="${body//$'====================\n--------------------------'/'====================<details>'}"
        body="${body//$'--------------------------\nF'/'</details><details><summary>F'}"
        body="${body//$'.\n--------------------------'/'.</summary>'}"                             
        body="${body//$'==========================\nFA'/'</details>==========================<br>FA'}"
        body="${body//$'\n'/'<br>'}"
        echo "::set-output name=body1::$body"
    - uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "${{ steps.get-comment-body.outputs.body1 }}"
          })
